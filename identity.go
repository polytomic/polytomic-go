// This file was auto-generated by Fern from our API Definition.

package polytomic

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/polytomic/polytomic-go/core"
)

type GetIdentityResponseEnvelope struct {
	Data *GetIdentityResponseSchema `json:"data,omitempty" url:"data,omitempty"`

	_rawJSON json.RawMessage
}

func (g *GetIdentityResponseEnvelope) UnmarshalJSON(data []byte) error {
	type unmarshaler GetIdentityResponseEnvelope
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetIdentityResponseEnvelope(value)
	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetIdentityResponseEnvelope) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GetIdentityResponseSchema struct {
	Email            *string `json:"email,omitempty" url:"email,omitempty"`
	Id               *string `json:"id,omitempty" url:"id,omitempty"`
	IsOrganization   *bool   `json:"is_organization,omitempty" url:"is_organization,omitempty"`
	IsPartner        *bool   `json:"is_partner,omitempty" url:"is_partner,omitempty"`
	IsSystem         *bool   `json:"is_system,omitempty" url:"is_system,omitempty"`
	IsUser           *bool   `json:"is_user,omitempty" url:"is_user,omitempty"`
	OrganizationId   *string `json:"organization_id,omitempty" url:"organization_id,omitempty"`
	OrganizationName *string `json:"organization_name,omitempty" url:"organization_name,omitempty"`
	Role             *string `json:"role,omitempty" url:"role,omitempty"`

	_rawJSON json.RawMessage
}

func (g *GetIdentityResponseSchema) UnmarshalJSON(data []byte) error {
	type unmarshaler GetIdentityResponseSchema
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetIdentityResponseSchema(value)
	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetIdentityResponseSchema) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}
