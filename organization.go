// This file was auto-generated by Fern from our API Definition.

package polytomic

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/polytomic/polytomic-go/core"
)

type CreateOrganizationRequestSchema struct {
	ClientId     *string `json:"client_id,omitempty" url:"client_id,omitempty"`
	ClientSecret *string `json:"client_secret,omitempty" url:"client_secret,omitempty"`
	Issuer       *string `json:"issuer,omitempty" url:"issuer,omitempty"`
	Name         string  `json:"name" url:"name"`
	SsoDomain    *string `json:"sso_domain,omitempty" url:"sso_domain,omitempty"`
	SsoOrgId     *string `json:"sso_org_id,omitempty" url:"sso_org_id,omitempty"`
}

type UpdateOrganizationRequestSchema struct {
	ClientId     *string `json:"client_id,omitempty" url:"client_id,omitempty"`
	ClientSecret *string `json:"client_secret,omitempty" url:"client_secret,omitempty"`
	Issuer       *string `json:"issuer,omitempty" url:"issuer,omitempty"`
	Name         string  `json:"name" url:"name"`
	SsoDomain    *string `json:"sso_domain,omitempty" url:"sso_domain,omitempty"`
	SsoOrgId     *string `json:"sso_org_id,omitempty" url:"sso_org_id,omitempty"`
}

type Organization struct {
	Id        *string `json:"id,omitempty" url:"id,omitempty"`
	Issuer    *string `json:"issuer,omitempty" url:"issuer,omitempty"`
	Name      *string `json:"name,omitempty" url:"name,omitempty"`
	SsoDomain *string `json:"sso_domain,omitempty" url:"sso_domain,omitempty"`
	SsoOrgId  *string `json:"sso_org_id,omitempty" url:"sso_org_id,omitempty"`

	_rawJSON json.RawMessage
}

func (o *Organization) UnmarshalJSON(data []byte) error {
	type unmarshaler Organization
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*o = Organization(value)
	o._rawJSON = json.RawMessage(data)
	return nil
}

func (o *Organization) String() string {
	if len(o._rawJSON) > 0 {
		if value, err := core.StringifyJSON(o._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(o); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", o)
}

type OrganizationEnvelope struct {
	Data *Organization `json:"data,omitempty" url:"data,omitempty"`

	_rawJSON json.RawMessage
}

func (o *OrganizationEnvelope) UnmarshalJSON(data []byte) error {
	type unmarshaler OrganizationEnvelope
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*o = OrganizationEnvelope(value)
	o._rawJSON = json.RawMessage(data)
	return nil
}

func (o *OrganizationEnvelope) String() string {
	if len(o._rawJSON) > 0 {
		if value, err := core.StringifyJSON(o._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(o); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", o)
}

type OrganizationsEnvelope struct {
	Data []*Organization `json:"data,omitempty" url:"data,omitempty"`

	_rawJSON json.RawMessage
}

func (o *OrganizationsEnvelope) UnmarshalJSON(data []byte) error {
	type unmarshaler OrganizationsEnvelope
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*o = OrganizationsEnvelope(value)
	o._rawJSON = json.RawMessage(data)
	return nil
}

func (o *OrganizationsEnvelope) String() string {
	if len(o._rawJSON) > 0 {
		if value, err := core.StringifyJSON(o._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(o); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", o)
}
